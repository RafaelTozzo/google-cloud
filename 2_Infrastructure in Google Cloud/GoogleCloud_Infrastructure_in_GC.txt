Google Cloud Computing Foundations: Infrastructure in Google Cloud


GC databases and storage services:

    Relational databases:

        - Cloud Storage (fully managed scalable service):
            common use cases:
                Binary large-object(BLOB) storage
                Online content 
                Backup and archiving 
                Storage of intermediate results
            
            Organized in buckets
            Bucket need a exclusive global name
            Specific geographic location to be store and min latency

            Have a option to active a "GIT" for version control
            Have a option to set lifeycle polices

            4 basic Cloud Storage classes:
                All classes have:
                    Unlimited storage(no mim object size)
                    Worldwide accessibility and locations
                    Low latency and high durability
                    A uniform experience
                    Geo-redundancy
                1 - Standard Storage: Hot data
                2 - Nearline Storage: Once per month
                3 - Coldline Storage: Once every 90 days
                4 - Archive Storage: Once a year

            Content storage and delivery
            Data analytics and general compute
            Backup and archival storage 

        - Cloud SQL:
            Suport:
                MySQL
                PostgreSQL
                SQL Server

        - Cloud Spanner:
                Applications that require:
                    built-in high availability
                    strong global consistency
                    database sizes tha exceed 2TB 
                    high numbers of input/output, and thousands of reads/writes per second
                Scales horizontally
                Stronglys consistent
                Speaks SQL


    NoSQL databases:
        - Firestore:
            Is a fully managed, serverless NoSQL document repository that accepts ACID transactions.
            Flexible
            Scales horizontally 
            for web, mobile, and server development


        - Bigtable
            Is a petabyte-scale sparse-column NoSQL database with low write latency.
            
            Handle massive workloads
            Consistent low latency 
            Hight throughput
            
            Great choice for:
                Operational applications 
                Analytical applications 

            Using APIs to read and write data:
                Data service layer:
                    Managed VMs 
                    HBase REST Server
                    Java Server 

            Streaming data into Bigtable:
                Stream processing frameworks:
                    Data flow
                    Spark Streaming 
                    Storm
            
            Using batch processes to read and write data:
                Batch processes:
                    - Hadoop MapReduce
                    - Dataflow
                    - Spark 


    Unstructured data:
        Usually used for:
            Documentes
            Images
            Audio files
        
        Databases:
            - Cloud Storage


    Structured:

        Transactional worload:
            SQL:
                Local/regional scability: Cloud SQL
                Global scability: Cloud Spanner           
            NoSQL: Firestore 
        
        Analytical workload:
            SQL: BigQuery 
            NoSQL: Cloud Bigtable 

        Tables 
        Rows 
        Columns 



API (Application programming interface):

    What is a API?:
        A clean, well-defined interface
        Underlying implementation can change
        Changes to the API are made with versions


    What is a REST API?:
        A set of constraints a service must comply with
        An API that uses HTTP requests to GET, PUT, POST, DELETE data 
        Designed to set up a format for applications to communicate 
        Great for cloud applications because they are stateless 
        Authentication via OAuth and security by leveraging tokens


    Cloud Endpoints:
        Distributed API management system
        Provides an API Console, hosting, logging, monitoring, and other features
        Use with any APIs that support the OpenAPI Specification 
        Supports applications tunning in App Engine, Google Kubernetes Engine, and Compute Engine
        Clients include Android, iOS, and Javascript 

        Interface definition:
            - Open API
            - gRPC API 

        Authentication and authorization:
            - Service-to-service authentication 
            - User authentication: Firebase, Auth0, Google Authentication

        Logging and monitoring:
            - Cloud Logging
            - Cloud Trace 

        Management and scability:
            - Extensible Service 
            - Proxy Service 
            - Management 
            - Service Control 
    

    Apigee Edge:
        - Specific focus on business problems, like rate limiting, quotas, and analytics
        - Many Apigee Edge users provide a software service to other companies
        - Backend services for Apigee Edge don't need to be in Google Cloud


    Pub/Sub (A distributes messaging service):

        - Publisher/Subscriber publish messages to subscribers 
        - Handle distributed message-oriented architectures at scale

        Features:
            - Ensures at-least-once delivery
            - No provisioning is required
            - APIs are open 
            - Global by default 
            - Offers end-to-end encryption



Infrastructure security design:

    - 1º Hardware Infrastructure
        Hardware design and provenance: 
            Both the server boards and the newtworking equipment in Google data centers are custom 
            designed by Google. Google also designs custom chips, including a security chip 

        Secure boot stack:
            Google's server machines use a variety of technologies to ensure that they are booting
            the corret software stacks.

        Premises security:
            Google designs and builds its own data centers, which incorporate multiple
            layers of physical security protections.


    - 2º Service deployment
        Encryption of inter-service communication:
            Google's services communicate with each other using remote procedure 
            calls "RPCs". 
            Google's infrastructure provides cryptographic privacy and integrity by 
            automatically encrypting all infrastructure RPC traffic between data centers

        User identity:
            Google's central identity service intelligently challenges user for additional
            information based on certain risk factors.
            Users can use secondary factors when signing in, including devices based on the
            Universal 2nd Factor (U2F) open standard


    - 3º Storage services
        Encryption at rest:
            Most Google applications access file storage indirectly vi storage
            services and encryption.
            Using centrally managed keys, encryption is applied at the layer
            of these storage services.
            Google also enables hardware encryption support in hard drives and SSDs


    - 4º Internet communication 
        Google Front End("GFE"):
            Google Front End ensures that all redistered services use TLS connections
            incorporating the correct certificates and following best practices.
        
        Denial of Service ("DoS") protection:
            Google has multi-tier, multi-layer DoS protections that reduce the risk of
            any DoS impact on a service running behind a GFE.


    - 5º Operational security
        Intrusion detection:
            Rules and machine intelligence give operational security engineers warnings
            of possible incidents

        Refucing insider risk:
            Google limits and monitors the activities of employees who have access to the
            infrastructure.

        Employee Universal Second Factor (U2F)
            All Google employee accounts require use of U2F-compatible Security Keys.

        Software development practices:
            Google employs central source control and requires two-party ewview of any new code.

    
    Google Cloud encryption options:
        Encryption by default (only on Google Cloud)  simple complex

        Customer-managed encryption keys (CMEK) medium complex
            Cloud KMS:
                - Manage keys in a cloud-hosted solution
                - Encrypt and decrypt via API
                - Automated and at-will key rotation 
                - Symmetric and asymmetric key support

        Customer-supplied encryption keys (CSEK) hard complex
            - Gives users more control over their keys, but with greater management complexity.
            - Users use their own AES-256-bit encryption keys and are responsible for generating them.
            - Users are responsible for storing the keys providing them as part of Google Cloud API calls.
            - Google Cloud will use the provided key to encrypt the data before saving it.


    Cloud Identity:
        Log in and manage resources using the same credentials used in existing Active Directory 
        or LDAP systems

        Google Admin Console can be used to disable user accounts and remove them from groups
        when they leave

        Available in free and premium editions

        Already available to Google Workspace customers in the Google Admin Console
        
        IAM roles:
            Basic IAM role 
            Predefined IAM role 
            Custom IAM role

        User Authentication: Identity-Aware Proxy (IAP)

        IAM Authorization:
            Best practices for service accounts:
                - Use caution when granting the serviceAccountUser role.
                - Give a service account a display name that clearly identifies its purpose.
                - Establish a naming convention for service accounts.
                - Establish key rotation polices and methods.


#####################################################################
Test: Where should i store my files?

Google Cloud offers two managed relational database services. Which ones are they?
- Cloud Spanner
- Cloud SQL 

Which storage service is best suited for unstructured data?
- Cloud Storage

Which storage solution is a petabyte-scale NoSQL database?
- Bigtable

You're looking for an unstructured storage solution to archive documents that may 
never be accessed again. Which Cloud Storage class is the best choice?
- Archive Storage


#####################################################################
Test: There is an API for that

Which platform used to develop and manage API proxies specifically focuses on business issues 
such as rate limiting, quotas and analytics?
- Apigee Edge

Which statement about Pub/Sub is true?
- Pub/Sub APIs are open.

What does the acronym API mean?
- application programming interface

What API management system supports apps running on App Engine, 
Google Kubernetes Engine, and Compute Engine?
- Cloud Endpoints


#####################################################################
Test: You can't secure the cloud, right?

When a customer migrates an application to Google Cloud, which of the following is still their responsibility?
- data security

Which IAM role is the broadest in scope?
- Basic

At what level of Google Cloud infrastructure security will you encounter intrusion detection?
- At the level of operational safety

What encryption option can a customer use to encrypt data before sending that information to Google Cloud?
- Client side encryption


#####################################################################